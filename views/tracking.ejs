<!doctype html>
<html>
  <head>
    <title><%= title %></title>

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"/>

    <link rel="stylesheet" href="/dist/leaflet.css"/>
    <link rel="stylesheet" href="/dist/leaflet.fullscreen.css"/>
    <link rel="stylesheet" href="/dist/leaflet.search.css"/>

    <link rel="stylesheet" href="/style/inalacourt.notifications.css"/>
    <link rel="stylesheet" href="/style/inalacourt.markers.css"/>
    <link rel="stylesheet" href="/style/inalacourt.platform.css"/>

    <!--[if lte IE 8]>
    <link rel="stylesheet" href="/dist/leaflet.ie.css"/>
    <![endif]-->

    <script src="/dist/leaflet-src.js"></script>
    <script src="/dist/leaflet.fullscreen.js"></script>
    <script src="/dist/leaflet.hash.js"></script>
    <script src="/dist/leaflet.search.js"></script>
    <script src="/dist/leaflet.ajax.js"></script>

    <% if ( agent.indexOf( 'Mobile' ) > 0 ) {%>
    <script src="/dist/cordova-2.3.0.js"></script>
    <% } else { %>
    <% } %>

  </head>
  <body>
    <div id="map" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></div>
    <script src="/browserify/load?libs=util,io,template,notifications,dynamarker"></script>
    <script>
      var i = require ( 'socket.io' );
      var t = require ( 'template' );
      var u = require ( 'util' );
      var n = require ( 'notifications' );
      var d = require ( 'dynamarker' );
    </script>
    <script>

      var b = "http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/";
      var c = "http://" + document.location.hostname + ":8080/";
      var f = '/{z}/{x}/{y}.png';
      var g = '/{z}/{y}/{x}.png';

      var map = L.map ( 'map', { attributionControl : false } )
          .setView ( [-37.8, 144.9], 5 );

      L.control.scale ( { imperial : false } ).addTo ( map );

      var underlays = {
        "arcgis" : L.tileLayer ( b + g, { maxZoom : 18 } ).addTo ( map )
      };

      var overlays = {
      };

      var icon = function ( data ) {
        return "http://stocksoftware.com.au/images/logo.png";
      };

      var title = function ( data ) {
        return data.asset.regn;
      };

      var message = function ( previous, current ) {
        return "From [" + previous + "]\nTo [" + current + "]";
      };

      var create_icon = function ( data ) {
        return L.dynaIcon ( { markers : t.markers, data : data } )
      };

      var layer = L.layerGroup ( [] );

      var assets = {};
      var asset = i.connect ( "http://" + document.location.hostname + "/asset", { transports : ['websocket'] } );
      asset.on ( 'position', function ( data ) {
        var position = L.latLng (
            data.position.coords.latitude,
            data.position.coords.longitude );
        console.log( data );
        if ( !assets[data.identity] ) {
          assets[data.identity] = L.dynaMarker ( position, {
            icon  : create_icon ( data ),
            title : title ( data ),
            track : L.geoJson.ajax ( c + 'details' + '/' + data.identity + '?type=linestring', { } )
          } );
          assets[data.identity].bindPopup ( t.properties ( "Details", data.asset ) );
          assets[data.identity].addTo ( layer );
          assets[data.identity].on ( 'popupopen', function ( e ) {
            //assets[data.identity].openPopup();
            map.addLayer( e.target.options.track );
          } );
          assets[data.identity].on ( 'popupclose', function ( e ) {
            //assets[data.identity].closePopup();
            map.removeLayer( e.target.options.track );
          } );
        }
        else {
          var marker = assets[data.identity];
          if ( marker.getLatLng ().lat != position.lat ||
               marker.getLatLng ().lng != position.lng ) {
            map.notification ( icon ( data ), title ( data ), message ( marker.getLatLng (), position ), null, null,
                function () {
                  map.panTo ( marker.getLatLng (), {
                    pan : {
                      animate : true
                    },
                    zoom : {
                      animate : true
                    }
                  } );
                } );
            marker.options.track.refresh();
            marker.setIcon ( create_icon ( data ) );
            //marker.bindPopup ( t.properties ( "Details", data.asset ) );
            marker.setLatLng ( position )
          }
        }
        //} );
      } );

      L.control.search ( {layer : layer, initial : false} ).addTo ( map );
      L.control.fullscreen ().addTo ( map );
      L.hash ( map );
    </script>
  </body>
</html>
